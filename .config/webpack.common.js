// This plugin will extract CSS into separate files
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
// This plugin removes empty scripts generated by usage 
const RemoveEmptyScriptsPlugin = require('webpack-remove-empty-scripts');

module.exports = {
  entry: {
    main:"./src/js/index.ts",
    style: './src/styles/index.css',
    preload_style: './src/styles/preload.css',
  },
  resolve: {
    extensions: [".tsx", ".ts", ".js",".css"],
  },
  // Determine how modules within the project are treated
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        use: "ts-loader",
        exclude: /node_modules/,
      },

      // Styles: Inject CSS into the head with source maps
      {
        test: /\.(scss|css)$/,
        use: [
          // Extracts CSS into separate files
          MiniCssExtractPlugin.loader,
          // 'style-loader',
          {loader: 'css-loader?url=false', options: {sourceMap: true, importLoaders: 1}},
         
          {loader: 'sass-loader', options: {sourceMap: true}},

          {loader: 'postcss-loader', options: {sourceMap: true}},
        ],
      },
    ],
  },

  plugins: [
    new RemoveEmptyScriptsPlugin({ verbose: true }),
    new MiniCssExtractPlugin({
      // Configure the output of CSS.
      // It is relative to output dir, only relative path work, absolute path does not work.
      filename: "styles/[name].css",
      chunkFilename: '[id].css',
    }),
  ],
};
